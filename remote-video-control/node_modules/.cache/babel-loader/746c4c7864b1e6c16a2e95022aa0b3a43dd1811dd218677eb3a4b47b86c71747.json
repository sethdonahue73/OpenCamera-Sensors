{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\OpenCamera-Sensors\\\\remote-video-control\\\\src\\\\Calibration.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calibration() {\n  _s();\n  // State variables for session details loaded from localStorage\n  const [studyId, setStudyId] = useState(\"\");\n  const [sessionId, setSessionId] = useState(\"\");\n  const [smartphoneIp, setSmartphoneIp] = useState(\"\");\n  const [baseSavePath, setBaseSavePath] = useState(\"\");\n\n  // State for the full derived save path\n  const [fullSavePath, setFullSavePath] = useState(\"\");\n\n  // Calibration parameters\n  const [boardRows, setBoardRows] = useState(7);\n  const [boardCols, setBoardCols] = useState(5);\n  const [squareSize, setSquareSize] = useState(0.025); // in meters, e.g., 2.5 cm\n  const [duration, setDuration] = useState(5); // Default video duration in seconds\n\n  // UI state\n  const [isCalibrating, setIsCalibrating] = useState(false);\n  const [calibrationMessage, setCalibrationMessage] = useState(\"\");\n\n  // Use a useEffect hook to load session details and derive the full path when the component mounts\n  useEffect(() => {\n    const storedStudyId = localStorage.getItem('studyId');\n    const storedSessionId = localStorage.getItem('sessionId');\n    const storedSmartphoneIp = localStorage.getItem('smartphoneIp');\n    const storedBaseSavePath = localStorage.getItem('baseSavePath');\n    if (storedStudyId) setStudyId(storedStudyId);\n    if (storedSessionId) setSessionId(storedSessionId);\n    if (storedSmartphoneIp) setSmartphoneIp(storedSmartphoneIp);\n    if (storedBaseSavePath) setBaseSavePath(storedBaseSavePath);\n\n    // Derive the full save path from the stored values\n    if (storedStudyId && storedSessionId && storedBaseSavePath) {\n      const pathSeparator = storedBaseSavePath.endsWith('/') || storedBaseSavePath.endsWith('\\\\') ? '' : '/';\n      setFullSavePath(`${storedBaseSavePath}${pathSeparator}${storedStudyId}/${storedSessionId}`);\n    } else {\n      setFullSavePath(\"Not set\");\n    }\n\n    // Clear the message when the component loads\n    setCalibrationMessage(\"\");\n  }, []);\n\n  // Function to perform the entire calibration workflow\n  const performFullCalibration = async () => {\n    if (!studyId || !sessionId) {\n      setCalibrationMessage(\"Error: Session details are missing. Please go back to Session Initialization.\");\n      return;\n    }\n    setIsCalibrating(true);\n    setCalibrationMessage(\"Starting smartphone video capture and calibration processing...\");\n    try {\n      const response = await axios.post(\"http://localhost:8000/capture-and-process-smartphone-calibration\", {}, {\n        params: {\n          study_id: studyId,\n          session_id: sessionId,\n          smartphone_ip: smartphoneIp,\n          duration: duration,\n          board_rows: boardRows,\n          board_cols: boardCols,\n          square_size: squareSize,\n          save_path: baseSavePath // Pass the baseSavePath to the backend\n        }\n      });\n      setCalibrationMessage(`Calibration successful! Reprojection Error: ${response.data.reprojection_error.toFixed(4)}`);\n      console.log(\"Calibration results:\", response.data);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Failed to calibrate camera:\", error);\n      setCalibrationMessage(`Failed to calibrate camera. Error: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || error.message}`);\n    } finally {\n      setIsCalibrating(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\",\n      maxWidth: \"800px\",\n      margin: \"0 auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Calibration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This page is dedicated to initiating and managing calibration procedures.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: '#f0f0f0',\n        padding: '1rem',\n        marginBottom: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Current Session Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Study ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 20\n        }, this), \" \", studyId || \"Not set\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Session ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 20\n        }, this), \" \", sessionId || \"Not set\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Smartphone IP:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 20\n        }, this), \" \", smartphoneIp || \"Not set\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Full Save Path:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 20\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: fullSavePath\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 53\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        marginTop: \"2.5rem\"\n      },\n      children: \"Calibration Parameters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"1rem\",\n        display: 'flex',\n        gap: '20px',\n        flexWrap: 'wrap'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"board-rows\",\n          children: \"Inner Corners (Rows):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"board-rows\",\n          value: boardRows,\n          onChange: e => setBoardRows(parseInt(e.target.value)),\n          style: {\n            marginLeft: \"0.5rem\",\n            padding: \"8px\",\n            width: \"80px\"\n          },\n          min: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"board-cols\",\n          children: \"Inner Corners (Cols):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"board-cols\",\n          value: boardCols,\n          onChange: e => setBoardCols(parseInt(e.target.value)),\n          style: {\n            marginLeft: \"0.5rem\",\n            padding: \"8px\",\n            width: \"80px\"\n          },\n          min: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"square-size\",\n          children: \"Square Size (m):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"square-size\",\n          value: squareSize,\n          onChange: e => setSquareSize(parseFloat(e.target.value)),\n          style: {\n            marginLeft: \"0.5rem\",\n            padding: \"8px\",\n            width: \"80px\"\n          },\n          step: \"0.001\",\n          min: \"0.001\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"duration\",\n          children: \"Video Duration (s):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"duration\",\n          value: duration,\n          onChange: e => setDuration(parseInt(e.target.value)),\n          style: {\n            marginLeft: \"0.5rem\",\n            padding: \"8px\",\n            width: \"80px\"\n          },\n          min: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        marginTop: \"2.5rem\"\n      },\n      children: \"Start Full Calibration Workflow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: performFullCalibration,\n      disabled: isCalibrating || !studyId || !sessionId,\n      style: {\n        padding: \"10px 20px\",\n        fontSize: \"1rem\"\n      },\n      children: isCalibrating ? \"Calibrating...\" : \"Start Full Calibration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), calibrationMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: \"1rem\",\n        color: isCalibrating ? 'orange' : calibrationMessage.includes(\"Error\") ? 'red' : 'green'\n      },\n      children: calibrationMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: \"2rem\",\n        fontStyle: \"italic\"\n      },\n      children: \"*This will capture a video from the smartphone and process it for camera calibration in a single step.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n_s(Calibration, \"Fw/U5AViG7mwfTDfHh38soHbkNM=\");\n_c = Calibration;\nexport default Calibration;\nvar _c;\n$RefreshReg$(_c, \"Calibration\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Calibration","_s","studyId","setStudyId","sessionId","setSessionId","smartphoneIp","setSmartphoneIp","baseSavePath","setBaseSavePath","fullSavePath","setFullSavePath","boardRows","setBoardRows","boardCols","setBoardCols","squareSize","setSquareSize","duration","setDuration","isCalibrating","setIsCalibrating","calibrationMessage","setCalibrationMessage","storedStudyId","localStorage","getItem","storedSessionId","storedSmartphoneIp","storedBaseSavePath","pathSeparator","endsWith","performFullCalibration","response","post","params","study_id","session_id","smartphone_ip","board_rows","board_cols","square_size","save_path","data","reprojection_error","toFixed","console","log","error","_error$response","_error$response$data","detail","message","style","padding","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","background","marginBottom","marginTop","display","gap","flexWrap","htmlFor","type","id","value","onChange","e","parseInt","target","marginLeft","width","min","parseFloat","step","onClick","disabled","fontSize","color","includes","fontStyle","_c","$RefreshReg$"],"sources":["C:/repos/OpenCamera-Sensors/remote-video-control/src/Calibration.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Calibration() {\r\n    // State variables for session details loaded from localStorage\r\n    const [studyId, setStudyId] = useState(\"\");\r\n    const [sessionId, setSessionId] = useState(\"\");\r\n    const [smartphoneIp, setSmartphoneIp] = useState(\"\");\r\n    const [baseSavePath, setBaseSavePath] = useState(\"\");\r\n\r\n    // State for the full derived save path\r\n    const [fullSavePath, setFullSavePath] = useState(\"\");\r\n\r\n    // Calibration parameters\r\n    const [boardRows, setBoardRows] = useState(7);\r\n    const [boardCols, setBoardCols] = useState(5);\r\n    const [squareSize, setSquareSize] = useState(0.025); // in meters, e.g., 2.5 cm\r\n    const [duration, setDuration] = useState(5); // Default video duration in seconds\r\n\r\n    // UI state\r\n    const [isCalibrating, setIsCalibrating] = useState(false);\r\n    const [calibrationMessage, setCalibrationMessage] = useState(\"\");\r\n\r\n    // Use a useEffect hook to load session details and derive the full path when the component mounts\r\n    useEffect(() => {\r\n        const storedStudyId = localStorage.getItem('studyId');\r\n        const storedSessionId = localStorage.getItem('sessionId');\r\n        const storedSmartphoneIp = localStorage.getItem('smartphoneIp');\r\n        const storedBaseSavePath = localStorage.getItem('baseSavePath');\r\n\r\n        if (storedStudyId) setStudyId(storedStudyId);\r\n        if (storedSessionId) setSessionId(storedSessionId);\r\n        if (storedSmartphoneIp) setSmartphoneIp(storedSmartphoneIp);\r\n        if (storedBaseSavePath) setBaseSavePath(storedBaseSavePath);\r\n\r\n        // Derive the full save path from the stored values\r\n        if (storedStudyId && storedSessionId && storedBaseSavePath) {\r\n            const pathSeparator = storedBaseSavePath.endsWith('/') || storedBaseSavePath.endsWith('\\\\') ? '' : '/';\r\n            setFullSavePath(`${storedBaseSavePath}${pathSeparator}${storedStudyId}/${storedSessionId}`);\r\n        } else {\r\n            setFullSavePath(\"Not set\");\r\n        }\r\n\r\n        // Clear the message when the component loads\r\n        setCalibrationMessage(\"\");\r\n    }, []);\r\n\r\n    // Function to perform the entire calibration workflow\r\n    const performFullCalibration = async () => {\r\n        if (!studyId || !sessionId) {\r\n            setCalibrationMessage(\"Error: Session details are missing. Please go back to Session Initialization.\");\r\n            return;\r\n        }\r\n\r\n        setIsCalibrating(true);\r\n        setCalibrationMessage(\"Starting smartphone video capture and calibration processing...\");\r\n\r\n        try {\r\n            const response = await axios.post(\"http://localhost:8000/capture-and-process-smartphone-calibration\", {}, {\r\n                params: {\r\n                    study_id: studyId,\r\n                    session_id: sessionId,\r\n                    smartphone_ip: smartphoneIp,\r\n                    duration: duration,\r\n                    board_rows: boardRows,\r\n                    board_cols: boardCols,\r\n                    square_size: squareSize,\r\n                    save_path: baseSavePath // Pass the baseSavePath to the backend\r\n                }\r\n            });\r\n\r\n            setCalibrationMessage(\r\n                `Calibration successful! Reprojection Error: ${response.data.reprojection_error.toFixed(4)}`\r\n            );\r\n            console.log(\"Calibration results:\", response.data);\r\n        } catch (error) {\r\n            console.error(\"Failed to calibrate camera:\", error);\r\n            setCalibrationMessage(\r\n                `Failed to calibrate camera. Error: ${error.response?.data?.detail || error.message}`\r\n            );\r\n        } finally {\r\n            setIsCalibrating(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: \"2rem\", maxWidth: \"800px\", margin: \"0 auto\" }}>\r\n            <h2>Calibration</h2>\r\n            <p>This page is dedicated to initiating and managing calibration procedures.</p>\r\n            \r\n            {/* Display the loaded session details */}\r\n            <div style={{ background: '#f0f0f0', padding: '1rem', marginBottom: '2rem' }}>\r\n                <h3>Current Session Details</h3>\r\n                <p><strong>Study ID:</strong> {studyId || \"Not set\"}</p>\r\n                <p><strong>Session ID:</strong> {sessionId || \"Not set\"}</p>\r\n                <p><strong>Smartphone IP:</strong> {smartphoneIp || \"Not set\"}</p>\r\n                <p><strong>Full Save Path:</strong> <code>{fullSavePath}</code></p>\r\n            </div>\r\n\r\n            <h3 style={{ marginTop: \"2.5rem\" }}>Calibration Parameters</h3>\r\n            <div style={{ marginBottom: \"1rem\", display: 'flex', gap: '20px', flexWrap: 'wrap' }}>\r\n                <div>\r\n                    <label htmlFor=\"board-rows\">Inner Corners (Rows):</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        id=\"board-rows\"\r\n                        value={boardRows}\r\n                        onChange={(e) => setBoardRows(parseInt(e.target.value))}\r\n                        style={{ marginLeft: \"0.5rem\", padding: \"8px\", width: \"80px\" }}\r\n                        min=\"1\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"board-cols\">Inner Corners (Cols):</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        id=\"board-cols\"\r\n                        value={boardCols}\r\n                        onChange={(e) => setBoardCols(parseInt(e.target.value))}\r\n                        style={{ marginLeft: \"0.5rem\", padding: \"8px\", width: \"80px\" }}\r\n                        min=\"1\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"square-size\">Square Size (m):</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        id=\"square-size\"\r\n                        value={squareSize}\r\n                        onChange={(e) => setSquareSize(parseFloat(e.target.value))}\r\n                        style={{ marginLeft: \"0.5rem\", padding: \"8px\", width: \"80px\" }}\r\n                        step=\"0.001\"\r\n                        min=\"0.001\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"duration\">Video Duration (s):</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        id=\"duration\"\r\n                        value={duration}\r\n                        onChange={(e) => setDuration(parseInt(e.target.value))}\r\n                        style={{ marginLeft: \"0.5rem\", padding: \"8px\", width: \"80px\" }}\r\n                        min=\"1\"\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <h3 style={{ marginTop: \"2.5rem\" }}>Start Full Calibration Workflow</h3>\r\n            <button\r\n                onClick={performFullCalibration}\r\n                disabled={isCalibrating || !studyId || !sessionId}\r\n                style={{ padding: \"10px 20px\", fontSize: \"1rem\" }}\r\n            >\r\n                {isCalibrating ? (\r\n                    \"Calibrating...\"\r\n                ) : (\r\n                    \"Start Full Calibration\"\r\n                )}\r\n            </button>\r\n            {calibrationMessage && <p style={{ marginTop: \"1rem\", color: isCalibrating ? 'orange' : (calibrationMessage.includes(\"Error\") ? 'red' : 'green') }}>{calibrationMessage}</p>}\r\n\r\n            <p style={{ marginTop: \"2rem\", fontStyle: \"italic\" }}>\r\n                *This will capture a video from the smartphone and process it for camera calibration in a single step.\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Calibration;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}